name: Code Coverage 

on:
  workflow_call:
  push:
    branches:
      - main
  pull_request:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Pull and Run Docker with GCC 11.4.0 and LCOV
      run: |
        docker pull ubuntu:22.04
        docker run --rm -v $(pwd):/workspace -w /workspace ubuntu:22.04 bash -c "
          apt-get update &&
          apt-get install -y gcc-11 g++-11 lcov wget cmake zip &&
          update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 100 &&
          update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-11 100 &&
          update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-11 100 &&
          gcc --version &&
          gcov --version &&
          lcov --version &&

          # Clean old coverage files
          rm -rf cmake-build-unit-tests/*.gcda cmake-build-unit-tests/*.gcno &&

          # Configure and build the tests
          rm -rf cmake-build-unit-tests &&
          cmake -B cmake-build-unit-tests -S executables/unitTest -DBUILD_UNIT_TESTS=ON -DCMAKE_BUILD_TYPE=${BUILD_TYPE} &&
          cmake --build cmake-build-unit-tests -j4 &&

          ctest --test-dir cmake-build-unit-tests -j4 &&

          # Capture code coverage
          lcov --no-external --capture --directory . \
               --output-file cmake-build-unit-tests/coverage_unfiltered.info &&

          # Filter out 3rd party and mock files
          lcov --remove cmake-build-unit-tests/coverage_unfiltered.info \
               '*libs/3rdparty/googletest/*' \
               '*/mock/*' \
               '*/gmock/*' \
               '*/gtest/*' \
               '*/test/*' \
               --output-file cmake-build-unit-tests/coverage.info &&

          # Generate HTML coverage report
          genhtml cmake-build-unit-tests/coverage.info \
                  --output-directory cmake-build-unit-tests/coverage &&

          # Zip the coverage report
          mv cmake-build-unit-tests/coverage code_coverage &&
          zip -r code_coverage.zip code_coverage
        "

    - name: Upload code coverage artifact
      uses: actions/upload-artifact@v4
      with:
        name: code_coverage
        path: code_coverage.zip

    #To generate code-coverage badge with percentage

    - name: Install npm
      run: |
          sudo apt update
          sudo apt install nodejs npm

    - name: Convert the coverage.info to json format
      run: |
         mkdir -p coverage-badge
         npm install lcov-parse
         node coverage.js
         
    - name: Generate coverage badge
      run: |
          sudo npm install -g coverage-badges-cli
          coverage-badges --source coverage-badge/coverage-summary.json --output coverage-badge/badge-lines.svg --jsonPath 'total.statements.pct'
          echo "functional coverage"
          coverage-badges --source coverage-badge/coverage-summary.json --output coverage-badge/badge-functions.svg --jsonPath 'total.functions.pct'

    - name: Zip coverage badge
      run: |
          mv coverage-badge code_coverage_badge
          zip -r code_coverage_badge.zip code_coverage_badge

    - name: Upload code coverage badge artifact
      uses: actions/upload-artifact@v4
      with:
        name: code_coverage_badge
        path: code_coverage_badge.zip


    
