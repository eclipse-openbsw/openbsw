// Copyright 2025 Accenture.

#pragma once

#include <platform/estdint.h>

#define ENET_ETXD_STATUS1_R_SHIFT (15U)
#define ENET_ETXD_STATUS1_R_MASK  (0b1 << ENET_ETXD_STATUS1_R_SHIFT)
#define ENET_ETXD_STATUS1_R_WIDTH (1U)
#define ENET_ETXD_STATUS1_R(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ETXD_STATUS1_R_SHIFT)) & ENET_ETXD_STATUS1_R_MASK)

#define ENET_ETXD_STATUS1_TO1_SHIFT (14U)
#define ENET_ETXD_STATUS1_TO1_MASK  (0b1 << ENET_ETXD_STATUS1_TO1_SHIFT)
#define ENET_ETXD_STATUS1_TO1_WIDTH (1U)
#define ENET_ETXD_STATUS1_TO1(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ETXD_STATUS1_TO1_SHIFT)) & ENET_ETXD_STATUS1_TO1_MASK)

#define ENET_ETXD_STATUS1_W_SHIFT (13U)
#define ENET_ETXD_STATUS1_W_MASK  (0b1 << ENET_ETXD_STATUS1_W_SHIFT)
#define ENET_ETXD_STATUS1_W_WIDTH (1U)
#define ENET_ETXD_STATUS1_W(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ETXD_STATUS1_W_SHIFT)) & ENET_ETXD_STATUS1_W_MASK)

#define ENET_ETXD_STATUS1_TO2_SHIFT (12U)
#define ENET_ETXD_STATUS1_TO2_MASK  (0b1 << ENET_ETXD_STATUS1_TO2_SHIFT)
#define ENET_ETXD_STATUS1_TO2_WIDTH (1U)
#define ENET_ETXD_STATUS1_TO2(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ETXD_STATUS1_TO2_SHIFT)) & ENET_ETXD_STATUS1_TO2_MASK)

#define ENET_ETXD_STATUS1_L_SHIFT (11U)
#define ENET_ETXD_STATUS1_L_MASK  (0b1 << ENET_ETXD_STATUS1_L_SHIFT)
#define ENET_ETXD_STATUS1_L_WIDTH (1U)
#define ENET_ETXD_STATUS1_L(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ETXD_STATUS1_L_SHIFT)) & ENET_ETXD_STATUS1_L_MASK)

#define ENET_ETXD_STATUS1_TC_SHIFT (10U)
#define ENET_ETXD_STATUS1_TC_MASK  (0b1 << ENET_ETXD_STATUS1_TC_SHIFT)
#define ENET_ETXD_STATUS1_TC_WIDTH (1U)
#define ENET_ETXD_STATUS1_TC(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ETXD_STATUS1_TC_SHIFT)) & ENET_ETXD_STATUS1_TC_MASK)

#define ENET_ETXD_STATUS2_TXE_SHIFT (15U)
#define ENET_ETXD_STATUS2_TXE_MASK  (0b1 << ENET_ETXD_STATUS2_TXE_SHIFT)
#define ENET_ETXD_STATUS2_TXE_WIDTH (1U)
#define ENET_ETXD_STATUS2_TXE(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ETXD_STATUS2_TXE_SHIFT)) & ENET_ETXD_STATUS2_TXE_MASK)

#define ENET_ETXD_STATUS2_UE_SHIFT (13U)
#define ENET_ETXD_STATUS2_UE_MASK  (0b1 << ENET_ETXD_STATUS2_UE_SHIFT)
#define ENET_ETXD_STATUS2_UE_WIDTH (1U)
#define ENET_ETXD_STATUS2_UE(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ETXD_STATUS2_UE_SHIFT)) & ENET_ETXD_STATUS2_UE_MASK)

#define ENET_ETXD_STATUS2_EE_SHIFT (12U)
#define ENET_ETXD_STATUS2_EE_MASK  (0b1 << ENET_ETXD_STATUS2_EE_SHIFT)
#define ENET_ETXD_STATUS2_EE_WIDTH (1U)
#define ENET_ETXD_STATUS2_EE(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ETXD_STATUS2_EE_SHIFT)) & ENET_ETXD_STATUS2_EE_MASK)

#define ENET_ETXD_STATUS2_FE_SHIFT (11U)
#define ENET_ETXD_STATUS2_FE_MASK  (0b1 << ENET_ETXD_STATUS2_FE_SHIFT)
#define ENET_ETXD_STATUS2_FE_WIDTH (1U)
#define ENET_ETXD_STATUS2_FE(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ETXD_STATUS2_FE_SHIFT)) & ENET_ETXD_STATUS2_FE_MASK)

#define ENET_ETXD_STATUS2_LCE_SHIFT (10U)
#define ENET_ETXD_STATUS2_LCE_MASK  (0b1 << ENET_ETXD_STATUS2_LCE_SHIFT)
#define ENET_ETXD_STATUS2_LCE_WIDTH (1U)
#define ENET_ETXD_STATUS2_LCE(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ETXD_STATUS2_LCE_SHIFT)) & ENET_ETXD_STATUS2_LCE_MASK)

#define ENET_ETXD_STATUS2_OE_SHIFT (9U)
#define ENET_ETXD_STATUS2_OE_MASK  (0b1 << ENET_ETXD_STATUS2_OE_SHIFT)
#define ENET_ETXD_STATUS2_OE_WIDTH (1U)
#define ENET_ETXD_STATUS2_OE(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ETXD_STATUS2_OE_SHIFT)) & ENET_ETXD_STATUS2_OE_MASK)

#define ENET_ETXD_STATUS2_TSE_SHIFT (8U)
#define ENET_ETXD_STATUS2_TSE_MASK  (0b1 << ENET_ETXD_STATUS2_TSE_SHIFT)
#define ENET_ETXD_STATUS2_TSE_WIDTH (1U)
#define ENET_ETXD_STATUS2_TSE(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ETXD_STATUS2_TSE_SHIFT)) & ENET_ETXD_STATUS2_TSE_MASK)

#define ENET_ETXD_STATUS3_INT_SHIFT (14U)
#define ENET_ETXD_STATUS3_INT_MASK  (0b1 << ENET_ETXD_STATUS3_INT_SHIFT)
#define ENET_ETXD_STATUS3_INT_WIDTH (1U)
#define ENET_ETXD_STATUS3_INT(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ETXD_STATUS3_INT_SHIFT)) & ENET_ETXD_STATUS3_INT_MASK)

#define ENET_ETXD_STATUS3_TS_SHIFT (13U)
#define ENET_ETXD_STATUS3_TS_MASK  (0b1 << ENET_ETXD_STATUS3_TS_SHIFT)
#define ENET_ETXD_STATUS3_TS_WIDTH (1U)
#define ENET_ETXD_STATUS3_TS(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ETXD_STATUS3_TS_SHIFT)) & ENET_ETXD_STATUS3_TS_MASK)

#define ENET_ETXD_STATUS3_PINS_SHIFT (12U)
#define ENET_ETXD_STATUS3_PINS_MASK  (0b1 << ENET_ETXD_STATUS3_PINS_SHIFT)
#define ENET_ETXD_STATUS3_PINS_WIDTH (1U)
#define ENET_ETXD_STATUS3_PINS(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ETXD_STATUS3_PINS_SHIFT)) & ENET_ETXD_STATUS3_PINS_MASK)

#define ENET_ETXD_STATUS3_IINS_SHIFT (11U)
#define ENET_ETXD_STATUS3_IINS_MASK  (0b1 << ENET_ETXD_STATUS3_IINS_SHIFT)
#define ENET_ETXD_STATUS3_IINS_WIDTH (1U)
#define ENET_ETXD_STATUS3_IINS(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ETXD_STATUS3_IINS_SHIFT)) & ENET_ETXD_STATUS3_IINS_MASK)

#define ENET_ETXD_STATUS4_BDU_SHIFT (15U)
#define ENET_ETXD_STATUS4_BDU_MASK  (0b1 << ENET_ETXD_STATUS4_BDU_SHIFT)
#define ENET_ETXD_STATUS4_BDU_WIDTH (1U)
#define ENET_ETXD_STATUS4_BDU(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ETXD_STATUS4_BDU_SHIFT)) & ENET_ETXD_STATUS4_BDU_MASK)

struct ENET_ETXD
{
    uint16_t length;
    uint16_t status1;
    uint8_t* data;
    uint16_t status2;
    uint16_t status3;
    uint16_t dummy1;
    uint16_t dummy2;
    uint16_t dummy3;
    uint16_t status4;
    uint32_t timestamp;
    uint16_t dummy4;
    uint16_t dummy5;
    uint16_t dummy6;
    uint16_t dummy7;
};

#define ENET_ERXD_STATUS1_EMPTY_SHIFT (15U)
#define ENET_ERXD_STATUS1_EMPTY_MASK  (0b1 << ENET_ERXD_STATUS1_EMPTY_SHIFT)
#define ENET_ERXD_STATUS1_EMPTY_WIDTH (1U)
#define ENET_ERXD_STATUS1_EMPTY(x) \
    (((uint32_t)(((uint16_t)(x)) << ENET_ERXD_STATUS1_EMPTY_SHIFT)) & ENET_ERXD_STATUS1_EMPTY_MASK)

#define ENET_ERXD_STATUS1_RO1_SHIFT (14U)
#define ENET_ERXD_STATUS1_RO1_MASK  (0b1 << ENET_ERXD_STATUS1_RO1_SHIFT)
#define ENET_ERXD_STATUS1_RO1_WIDTH (1U)
#define ENET_ERXD_STATUS1_RO1(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ERXD_STATUS1_RO1_SHIFT)) & ENET_ERXD_STATUS1_RO1_MASK)

#define ENET_ERXD_STATUS1_WRAP_SHIFT (13U)
#define ENET_ERXD_STATUS1_WRAP_MASK  (0b1 << ENET_ERXD_STATUS1_WRAP_SHIFT)
#define ENET_ERXD_STATUS1_WRAP_WIDTH (1U)
#define ENET_ERXD_STATUS1_WRAP(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ERXD_STATUS1_WRAP_SHIFT)) & ENET_ERXD_STATUS1_WRAP_MASK)

#define ENET_ERXD_STATUS1_RO2_SHIFT (12U)
#define ENET_ERXD_STATUS1_RO2_MASK  (0b1 << ENET_ERXD_STATUS1_RO2_SHIFT)
#define ENET_ERXD_STATUS1_RO2_WIDTH (1U)
#define ENET_ERXD_STATUS1_RO2(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ERXD_STATUS1_RO2_SHIFT)) & ENET_ERXD_STATUS1_RO2_MASK)

#define ENET_ERXD_STATUS1_LAST_SHIFT (11U)
#define ENET_ERXD_STATUS1_LAST_MASK  (0b1 << ENET_ERXD_STATUS1_LAST_SHIFT)
#define ENET_ERXD_STATUS1_LAST_WIDTH (1U)
#define ENET_ERXD_STATUS1_LAST(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ERXD_STATUS1_LAST_SHIFT)) & ENET_ERXD_STATUS1_LAST_MASK)

#define ENET_ERXD_STATUS1_M_SHIFT (8U)
#define ENET_ERXD_STATUS1_M_MASK  (0b1 << ENET_ERXD_STATUS1_M_SHIFT)
#define ENET_ERXD_STATUS1_M_WIDTH (1U)
#define ENET_ERXD_STATUS1_M(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ERXD_STATUS1_M_SHIFT)) & ENET_ERXD_STATUS1_M_MASK)

#define ENET_ERXD_STATUS1_BC_SHIFT (7U)
#define ENET_ERXD_STATUS1_BC_MASK  (0b1 << ENET_ERXD_STATUS1_BC_SHIFT)
#define ENET_ERXD_STATUS1_BC_WIDTH (1U)
#define ENET_ERXD_STATUS1_BC(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ERXD_STATUS1_BC_SHIFT)) & ENET_ERXD_STATUS1_BC_MASK)

#define ENET_ERXD_STATUS1_MC_SHIFT (6U)
#define ENET_ERXD_STATUS1_MC_MASK  (0b1 << ENET_ERXD_STATUS1_MC_SHIFT)
#define ENET_ERXD_STATUS1_MC_WIDTH (1U)
#define ENET_ERXD_STATUS1_MC(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ERXD_STATUS1_MC_SHIFT)) & ENET_ERXD_STATUS1_MC_MASK)

#define ENET_ERXD_STATUS1_LENGTH_SHIFT (5U)
#define ENET_ERXD_STATUS1_LENGTH_MASK  (0b1 << ENET_ERXD_STATUS1_LENGTH_SHIFT)
#define ENET_ERXD_STATUS1_LENGTH_WIDTH (1U)
#define ENET_ERXD_STATUS1_LENGTH(x)                                  \
    (((uint16_t)(((uint16_t)(x)) << ENET_ERXD_STATUS1_LENGTH_SHIFT)) \
     & ENET_ERXD_STATUS1_LENGTH_MASK)

#define ENET_ERXD_STATUS1_NO_SHIFT (4U)
#define ENET_ERXD_STATUS1_NO_MASK  (0b1 << ENET_ERXD_STATUS1_NO_SHIFT)
#define ENET_ERXD_STATUS1_NO_WIDTH (1U)
#define ENET_ERXD_STATUS1_NO(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ERXD_STATUS1_NO_SHIFT)) & ENET_ERXD_STATUS1_NO_MASK)

#define ENET_ERXD_STATUS1_CR_SHIFT (2U)
#define ENET_ERXD_STATUS1_CR_MASK  (0b1 << ENET_ERXD_STATUS1_CR_SHIFT)
#define ENET_ERXD_STATUS1_CR_WIDTH (1U)
#define ENET_ERXD_STATUS1_CR(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ERXD_STATUS1_CR_SHIFT)) & ENET_ERXD_STATUS1_CR_MASK)

#define ENET_ERXD_STATUS1_OVER_SHIFT (1U)
#define ENET_ERXD_STATUS1_OVER_MASK  (0b1 << ENET_ERXD_STATUS1_OVER_SHIFT)
#define ENET_ERXD_STATUS1_OVER_WIDTH (1U)
#define ENET_ERXD_STATUS1_OVER(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ERXD_STATUS1_OVER_SHIFT)) & ENET_ERXD_STATUS1_OVER_MASK)

#define ENET_ERXD_STATUS1_TR_SHIFT (0U)
#define ENET_ERXD_STATUS1_TR_MASK  (0b1 << ENET_ERXD_STATUS1_TR_SHIFT)
#define ENET_ERXD_STATUS1_TR_WIDTH (1U)
#define ENET_ERXD_STATUS1_TR(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ERXD_STATUS1_TR_SHIFT)) & ENET_ERXD_STATUS1_TR_MASK)

#define ENET_ERXD_STATUS2_VPCP_SHIFT (13U)
#define ENET_ERXD_STATUS2_VPCP_MASK  (0b111 << ENET_ERXD_STATUS2_VPCP_SHIFT)
#define ENET_ERXD_STATUS2_VPCP_WIDTH (3U)
#define ENET_ERXD_STATUS2_VPCP(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ERXD_STATUS2_VPCP_SHIFT)) & ENET_ERXD_STATUS2_VPCP_MASK)

#define ENET_ERXD_STATUS2_ICE_SHIFT (5U)
#define ENET_ERXD_STATUS2_ICE_MASK  (0b1 << ENET_ERXD_STATUS2_ICE_SHIFT)
#define ENET_ERXD_STATUS2_ICE_WIDTH (1U)
#define ENET_ERXD_STATUS2_ICE(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ERXD_STATUS2_ICE_SHIFT)) & ENET_ERXD_STATUS2_ICE_MASK)

#define ENET_ERXD_STATUS2_PCR_SHIFT (4U)
#define ENET_ERXD_STATUS2_PCR_MASK  (0b1 << ENET_ERXD_STATUS2_PCR_SHIFT)
#define ENET_ERXD_STATUS2_PCR_WIDTH (1U)
#define ENET_ERXD_STATUS2_PCR(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ERXD_STATUS2_PCR_SHIFT)) & ENET_ERXD_STATUS2_PCR_MASK)

#define ENET_ERXD_STATUS2_VLAN_SHIFT (2U)
#define ENET_ERXD_STATUS2_VLAN_MASK  (0b1 << ENET_ERXD_STATUS2_VLAN_SHIFT)
#define ENET_ERXD_STATUS2_VLAN_WIDTH (1U)
#define ENET_ERXD_STATUS2_VLAN(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ERXD_STATUS2_VLAN_SHIFT)) & ENET_ERXD_STATUS2_VLAN_MASK)

#define ENET_ERXD_STATUS2_IPV6_SHIFT (1U)
#define ENET_ERXD_STATUS2_IPV6_MASK  (0b1 << ENET_ERXD_STATUS2_IPV6_SHIFT)
#define ENET_ERXD_STATUS2_IPV6_WIDTH (1U)
#define ENET_ERXD_STATUS2_IPV6(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ERXD_STATUS2_IPV6_SHIFT)) & ENET_ERXD_STATUS2_IPV6_MASK)

#define ENET_ERXD_STATUS2_FRAG_SHIFT (0U)
#define ENET_ERXD_STATUS2_FRAG_MASK  (0b1 << ENET_ERXD_STATUS2_FRAG_SHIFT)
#define ENET_ERXD_STATUS2_FRAG_WIDTH (1U)
#define ENET_ERXD_STATUS2_FRAG(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ERXD_STATUS2_FRAG_SHIFT)) & ENET_ERXD_STATUS2_FRAG_MASK)

#define ENET_ERXD_STATUS3_ME_SHIFT (15U)
#define ENET_ERXD_STATUS3_ME_MASK  (0b1 << ENET_ERXD_STATUS3_ME_SHIFT)
#define ENET_ERXD_STATUS3_ME_WIDTH (1U)
#define ENET_ERXD_STATUS3_ME(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ERXD_STATUS3_ME_SHIFT)) & ENET_ERXD_STATUS3_ME_MASK)

#define ENET_ERXD_STATUS3_PE_SHIFT (10U)
#define ENET_ERXD_STATUS3_PE_MASK  (0b1 << ENET_ERXD_STATUS3_PE_SHIFT)
#define ENET_ERXD_STATUS3_PE_WIDTH (1U)
#define ENET_ERXD_STATUS3_PE(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ERXD_STATUS3_PE_SHIFT)) & ENET_ERXD_STATUS3_PE_MASK)

#define ENET_ERXD_STATUS3_CE_SHIFT (9U)
#define ENET_ERXD_STATUS3_CE_MASK  (0b1 << ENET_ERXD_STATUS3_CE_SHIFT)
#define ENET_ERXD_STATUS3_CE_WIDTH (1U)
#define ENET_ERXD_STATUS3_CE(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ERXD_STATUS3_CE_SHIFT)) & ENET_ERXD_STATUS3_CE_MASK)

#define ENET_ERXD_STATUS3_UC_SHIFT (8U)
#define ENET_ERXD_STATUS3_UC_MASK  (0b1 << ENET_ERXD_STATUS3_UC_SHIFT)
#define ENET_ERXD_STATUS3_UC_WIDTH (1U)
#define ENET_ERXD_STATUS3_UC(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ERXD_STATUS3_UC_SHIFT)) & ENET_ERXD_STATUS3_UC_MASK)

#define ENET_ERXD_STATUS3_INT_SHIFT (7U)
#define ENET_ERXD_STATUS3_INT_MASK  (0b1 << ENET_ERXD_STATUS3_INT_SHIFT)
#define ENET_ERXD_STATUS3_INT_WIDTH (1U)
#define ENET_ERXD_STATUS3_INT(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ERXD_STATUS3_INT_SHIFT)) & ENET_ERXD_STATUS3_INT_MASK)

#define ENET_ERXD_STATUS4_HDL_SHIFT (11U)
#define ENET_ERXD_STATUS4_HDL_MASK  (0b11111 << ENET_ERXD_STATUS4_HDL_SHIFT)
#define ENET_ERXD_STATUS4_HDL_WIDTH (5U)
#define ENET_ERXD_STATUS4_HDL(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ERXD_STATUS4_HDL_SHIFT)) & ENET_ERXD_STATUS4_HDL_MASK)

#define ENET_ERXD_STATUS4_PROTTYPE_SHIFT (0U)
#define ENET_ERXD_STATUS4_PROTTYPE_MASK  (0b11111111 << ENET_ERXD_STATUS4_PROTTYPE_SHIFT)
#define ENET_ERXD_STATUS4_PROTTYPE_WIDTH (8U)
#define ENET_ERXD_STATUS4_PROTTYPE(x)                                  \
    (((uint16_t)(((uint16_t)(x)) << ENET_ERXD_STATUS4_PROTTYPE_SHIFT)) \
     & ENET_ERXD_STATUS4_PROTTYPE_MASK)

#define ENET_ERXD_STATUS5_BDU_SHIFT (15U)
#define ENET_ERXD_STATUS5_BDU_MASK  (0b1 << ENET_ERXD_STATUS5_BDU_SHIFT)
#define ENET_ERXD_STATUS5_BDU_WIDTH (1U)
#define ENET_ERXD_STATUS5_BDU(x) \
    (((uint16_t)(((uint16_t)(x)) << ENET_ERXD_STATUS5_BDU_SHIFT)) & ENET_ERXD_STATUS5_BDU_MASK)

struct ENET_ERXD
{
    uint16_t length;
    uint16_t status1;
    uint8_t* data;
    uint16_t status2;
    uint16_t status3;
    uint16_t checksum;
    uint16_t status4;
    uint16_t dummy3;
    uint16_t status5;
    uint32_t timestamp;
    uint16_t dummy4;
    uint16_t dummy5;
    uint16_t dummy6;
    uint16_t dummy7;
};
